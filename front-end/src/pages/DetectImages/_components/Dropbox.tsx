import React, { useCallback, useState, useEffect } from "react";
import { useDropzone } from "react-dropzone";
import pngImage from "../../../assets/images/pngIcon.png";

import SendIcon from '@mui/icons-material/Send';
import LoadingButton from '@mui/lab/LoadingButton';
import UpLoadButton from "./UpLoadButton";

const Dropbox = () => {

    // const [isValid, setIsValid] = useState<boolean>(false);
    const [uploadedImage, setUploadedImage] = useState<string | null>(null);
    const [loading, setLoading] = useState<boolean>(false);
    const [result, setResult] = useState<string | null>(null);
    const [mreImage, setMreImage] = useState< string | null> (null)
    const [realConfidentPercent, setRealConfidentPercent] = useState(0)
    const onDrop = useCallback(async (acceptedFiles: File[]) => {
        if (acceptedFiles.length > 0) {
            const file = acceptedFiles[0];
            const fileUrl = URL.createObjectURL(file);
            setUploadedImage(fileUrl);
            console.log("Đã chọn file:", file);
        }
    }, []);
    const { getRootProps, getInputProps } = useDropzone({
        accept: {
            'image/*': [] 
        },
        onDrop,
        multiple: false
    });
    const handleDetectImage = async () => {
        if (uploadedImage) {
            setLoading(true);
            setResult(null);
            
            try {
                await new Promise((resolve) => setTimeout(resolve, 2000)); 
                const response = await fetch(uploadedImage);
                const blob = await response.blob();
                const formData = new FormData();
                formData.append('image', blob, 'image.png');

            
                const apiResponse = await fetch('YOUR_BACKEND_API_URL', {
                    method: 'POST',
                    body: formData,
                });

                if (!apiResponse.ok) throw new Error('Network response was not ok');

                const data = await apiResponse.json();
                
                setRealConfidentPercent(15)
                setResult('REAL');
                setMreImage(uploadedImage)
            } catch (error) {
                console.error('Error during image detection:', error);
                setResult('Error processing image');
            } finally {
                setLoading(false);
            }
        }
    };

    return (
        <div className=" p-xl-2 border-3  bg-white mt-5 d-flex flex-column align-items-center p-3 rounded-2" style={{ height: "80vh" }}  >
            <h1 className=" text-info">Detect Image Generated By Ai</h1>
            {uploadedImage ? (
                <>
                    <div className="d-flex flex-column flex-md-row h-100 w-100 flex-row" style={{ flex: 1 }} >
                        <div className="dropbox col-md-8 d-flex align-items-center justify-content-center" style={{ border: "2px dashed black", cursor: "pointer" }} {...getRootProps()}>
                            <input {...getInputProps()} />
                            <img src={uploadedImage} alt="Uploaded" className="img-fluid" style={{ maxHeight: "70%", maxWidth: "70%" }} />
                        </div>
                        <div className="col-md-4 d-flex flex-column px-5">
                            <LoadingButton
                                loading={loading}
                                loadingPosition="start"
                                startIcon={<SendIcon />}
                                variant="contained"
                                onClick={handleDetectImage}
                                sx={{ 
                                    backgroundColor: loading ? '#2196F3' : '#4CAF50',
                                    
                                }}
                            >
                                Detect Image
                            </LoadingButton>
                            {result && mreImage && (
                                <>
                                    <h4 className="mt-3 text-center">MRE IMAGE</h4>
                                    <img src={mreImage} alt="Uploaded" className="img-fluid mt-1" style={{ maxHeight: "100%", maxWidth: "100%" }} />
                                    <p> Probability of the image being generated by AI: {100 - realConfidentPercent}%</p>
                                    <h3> The model estimates that the image is <span className="text-danger">{result}</span>  </h3>
                                </>
                                
                            )}
                                
                                
                            
                        </div>
                    </div>

                </>
            ) : (
                <>
                    <div className="dropbox container d-flex flex-column align-items-center justify-content-center w-100 h-100" style={{ border: "2px dashed black", cursor: "pointer" }} {...getRootProps()}>
                        <input {...getInputProps()} />
                        <img src={pngImage} alt="Default" className="img-fluid" style={{ height: "10vh" }} />
                        <h4 className="mt-3">Drag and drop an image file (JPG, PNG, BMP, and more)</h4>
                        <UpLoadButton className="mt-5 w-25 bg" />
                    </div>
                </>

            )}

        </div >
    );
};

export default Dropbox;
